if ((typeof(aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1)) == "undefined") {aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1 = {};
};
(function(){aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.bytesPerElem$53 = 8;
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.isBigEndian$54 = true;
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.toBytes$73 = function(r$76){var vec$154 = SmlPrims.real_to_bytes(r$76);
var len$162 = vec$154.length;
if ((len$162 < 0)?true:(len$162 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$166 = Array(len$162);
var fix$340 = {};
fix$340.$loop = function(j$168){lab$loop: while (true) {if (j$168 < len$162) {var t$343 = t$166;
var t$342 = j$168;
var t$341;
var v$272 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$162 - 1)) - j$168);
if ((v$272 < 0)?true:(v$272 >= vec$154.length)) {throw CompilerInitial.exn$Subscript$50;
} else {t$341 = (vec$154.charCodeAt(v$272));
};
(t$343[t$342] = t$341,0);
var t$344 = SmlPrims.chk_ovf_i32(j$168 + 1);
var j$168 = t$344;
continue lab$loop;
} else {return 0;
};
};
};
var loop$167 = fix$340.$loop;
loop$167(0);
return SmlPrims.charArrayToString(t$166);
};
};
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.fromBytes$77 = function(vec$80){var t$345;
var len$183 = vec$80.length;
if ((len$183 < 0)?true:(len$183 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$187 = Array(len$183);
var fix$346 = {};
fix$346.$loop = function(j$189){lab$loop: while (true) {if (j$189 < len$183) {var t$349 = t$187;
var t$348 = j$189;
var t$347;
var v$276 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$183 - 1)) - j$189);
if ((v$276 < 0)?true:(v$276 >= vec$80.length)) {throw CompilerInitial.exn$Subscript$50;
} else {t$347 = (vec$80.charCodeAt(v$276));
};
(t$349[t$348] = t$347,0);
var t$350 = SmlPrims.chk_ovf_i32(j$189 + 1);
var j$189 = t$350;
continue lab$loop;
} else {return 0;
};
};
};
var loop$188 = fix$346.$loop;
loop$188(0);
t$345 = (SmlPrims.charArrayToString(t$187));
};
return SmlPrims.bytes_to_real(t$345);
};
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.subVec$81 = function(v$327,v$328){var t$351;
var vec$197;
var v$335 = SmlPrims.chk_ovf_i32(v$327 * 8);
var v$336 = [0,8];
vec$197 = (h8WSvsgXbw6eki1a6hrTBPn$3basis$0ByteSlice$1$6.slice$1392(v$336,v$335,v$328));
var len$198 = vec$197[2];
if ((len$198 < 0)?true:(len$198 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$203 = Array(len$198);
var fix$352 = {};
fix$352.$loop = function(j$205){lab$loop: while (true) {if (j$205 < len$198) {var t$355 = t$203;
var t$354 = j$205;
var t$353;
var v$322 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$198 - 1)) - j$205);
var v$293 = vec$197[0];
var v$294 = vec$197[1];
var v$295 = vec$197[2];
if ((v$322 < 0)?true:(v$322 >= v$295)) {throw CompilerInitial.exn$Subscript$50;
} else {t$353 = (v$293.charCodeAt(SmlPrims.chk_ovf_i32(v$294 + v$322)));
};
(t$355[t$354] = t$353,0);
var t$356 = SmlPrims.chk_ovf_i32(j$205 + 1);
var j$205 = t$356;
continue lab$loop;
} else {return 0;
};
};
};
var loop$204 = fix$352.$loop;
loop$204(0);
t$351 = (SmlPrims.charArrayToString(t$203));
};
return SmlPrims.bytes_to_real(t$351);
};
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.subArr$88 = function(v$329,v$330){var t$357;
var vec$216;
var v$338 = SmlPrims.chk_ovf_i32(v$329 * 8);
var v$339 = [0,8];
vec$216 = (h8WSvsgXbw6eki1a6hrTBPn$3basis$0ByteSlice$1$12.slice$3722(v$339,v$338,v$330));
var len$217 = vec$216[2];
if ((len$217 < 0)?true:(len$217 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$222 = Array(len$217);
var fix$358 = {};
fix$358.$loop = function(j$224){lab$loop: while (true) {if (j$224 < len$217) {var t$361 = t$222;
var t$360 = j$224;
var t$359;
var v$324 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$217 - 1)) - j$224);
var v$313 = vec$216[0];
var v$314 = vec$216[1];
var v$315 = vec$216[2];
if ((v$324 < 0)?true:(v$324 >= v$315)) {throw CompilerInitial.exn$Subscript$50;
} else {t$359 = v$313[SmlPrims.chk_ovf_i32(v$314 + v$324)];
};
(t$361[t$360] = t$359,0);
var t$362 = SmlPrims.chk_ovf_i32(j$224 + 1);
var j$224 = t$362;
continue lab$loop;
} else {return 0;
};
};
};
var loop$223 = fix$358.$loop;
loop$223(0);
t$357 = (SmlPrims.charArrayToString(t$222));
};
return SmlPrims.bytes_to_real(t$357);
};
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.update$95 = function(v$331,v$332,v$333){var v$232;
var v$101;
var vec$242 = SmlPrims.real_to_bytes(v$331);
var len$243 = vec$242.length;
if ((len$243 < 0)?true:(len$243 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$250 = Array(len$243);
var fix$363 = {};
fix$363.$loop = function(j$252){lab$loop: while (true) {if (j$252 < len$243) {var t$366 = t$250;
var t$365 = j$252;
var t$364;
var v$320 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$243 - 1)) - j$252);
if ((v$320 < 0)?true:(v$320 >= vec$242.length)) {throw CompilerInitial.exn$Subscript$50;
} else {t$364 = (vec$242.charCodeAt(v$320));
};
(t$366[t$365] = t$364,0);
var t$367 = SmlPrims.chk_ovf_i32(j$252 + 1);
var j$252 = t$367;
continue lab$loop;
} else {return 0;
};
};
};
var loop$251 = fix$363.$loop;
loop$251(0);
v$101 = (SmlPrims.charArrayToString(t$250));
};
v$232 = [SmlPrims.chk_ovf_i32(v$332 * 8),v$333,v$101];
var v$233 = v$232[2];
var v$235 = v$232[0];
var n_dst$236 = v$333.length;
var n_src$237 = v$233.length;
var n$238 = SmlPrims.chk_ovf_i32(n_src$237 - 0);
if ((n$238 < 0)?true:(((SmlPrims.chk_ovf_i32(0 + n$238)) > n_src$237)?true:((v$235 < 0)?true:((SmlPrims.chk_ovf_i32(v$235 + n$238)) > n_dst$236)))) {throw CompilerInitial.exn$Subscript$50;
} else {var fix$368 = {};
fix$368.$lo2hi = function(j$240){lab$lo2hi: while (true) {if (j$240 < n$238) {(v$333[SmlPrims.chk_ovf_i32(v$235 + j$240)] = (v$233.charCodeAt(SmlPrims.chk_ovf_i32(0 + j$240))),0);
var t$369 = SmlPrims.chk_ovf_i32(j$240 + 1);
var j$240 = t$369;
continue lab$lo2hi;
} else {return 0;
};
};
};
var lo2hi$239 = fix$368.$lo2hi;
return lo2hi$239(0);
};
};
return 0;
})();
